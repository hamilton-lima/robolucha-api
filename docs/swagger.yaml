basePath: /
definitions:
  model.ActiveMatch:
    properties:
      description:
        type: string
      duration:
        type: integer
      label:
        type: string
      matchID:
        type: integer
      name:
        type: string
      sortOrder:
        type: integer
      timeStart:
        type: string
      type:
        type: string
    type: object
  model.AvailableMatch:
    properties:
      classroomID:
        type: integer
      gameDefinitionID:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  model.Classroom:
    properties:
      accessCode:
        type: string
      id:
        type: integer
      name:
        type: string
      ownerID:
        type: integer
      students:
        items:
          $ref: '#/definitions/model.Student'
        type: array
    type: object
  model.Code:
    properties:
      event:
        type: string
      exception:
        type: string
      gameDefinition:
        type: integer
      id:
        type: integer
      script:
        type: string
    type: object
  model.Config:
    properties:
      id:
        type: integer
      key:
        type: string
      value:
        type: string
    type: object
  model.FindLuchadorWithGamedefinition:
    properties:
      gameDefinitionID:
        type: integer
      luchadorID:
        type: integer
    type: object
  model.GameComponent:
    properties:
      codes:
        items:
          $ref: '#/definitions/model.Code'
        type: array
      configs:
        items:
          $ref: '#/definitions/model.Config'
        type: array
      gameDefinition:
        type: integer
      id:
        type: integer
      name:
        type: string
      userID:
        type: integer
    type: object
  model.GameDefinition:
    properties:
      arenaHeight:
        type: integer
      arenaWidth:
        type: integer
      buletSpeed:
        type: integer
      bulletSize:
        type: integer
      codes:
        items:
          $ref: '#/definitions/model.Code'
        type: array
      description:
        type: string
      duration:
        type: integer
      energy:
        type: integer
      fireEnergyCost:
        type: integer
      fps:
        type: integer
      gameComponents:
        items:
          $ref: '#/definitions/model.GameComponent'
        type: array
      id:
        type: integer
      increaseSpeedEnergyCost:
        type: integer
      increaseSpeedPercentage:
        type: integer
      label:
        type: string
      life:
        type: integer
      luchadorSize:
        type: integer
      maxFireAmount:
        type: integer
      maxFireCooldown:
        type: integer
      maxFireDamage:
        type: integer
      maxParticipants:
        type: integer
      minFireAmount:
        type: integer
      minFireDamage:
        type: integer
      minParticipants:
        type: integer
      moveSpeed:
        type: integer
      name:
        type: string
      punchAngle:
        type: integer
      punchCoolDown:
        type: integer
      punchDamage:
        type: integer
      radarAngle:
        type: integer
      radarRadius:
        type: integer
      recycledLuchadorEnergyRestore:
        type: integer
      respawnAngle:
        type: integer
      respawnCooldown:
        type: integer
      respawnGunAngle:
        type: integer
      respawnX:
        type: integer
      respawnY:
        type: integer
      restoreEnergyperSecond:
        type: integer
      sceneComponents:
        items:
          $ref: '#/definitions/model.SceneComponent'
        type: array
      sortOrder:
        type: integer
      suggestedCodes:
        items:
          $ref: '#/definitions/model.Code'
        type: array
      turnGunSpeed:
        type: integer
      turnSpeed:
        type: integer
      type:
        type: string
    type: object
  model.JoinMatch:
    properties:
      luchadorID:
        type: integer
      matchID:
        type: integer
    type: object
  model.Match:
    properties:
      availableMatchID:
        type: integer
      gameDefinitionID:
        type: integer
      id:
        type: integer
      lastTimeAlive:
        type: string
      participants:
        items:
          $ref: '#/definitions/model.GameComponent'
        type: array
      timeEnd:
        type: string
      timeStart:
        type: string
    type: object
  model.MatchMetric:
    properties:
      fps:
        type: integer
      gameDefinitionID:
        type: integer
      id:
        type: integer
      matchID:
        type: integer
      players:
        type: integer
    type: object
  model.MatchParticipant:
    properties:
      luchadorID:
        type: integer
      matchID:
        type: integer
    type: object
  model.MatchScore:
    properties:
      deaths:
        type: integer
      id:
        type: integer
      kills:
        type: integer
      luchadorID:
        type: integer
      matchID:
        type: integer
      score:
        type: integer
    type: object
  model.SceneComponent:
    properties:
      alpha:
        type: number
      blockMovement:
        type: boolean
      codes:
        items:
          $ref: '#/definitions/model.Code'
        type: array
      colider:
        type: boolean
      color:
        type: string
      gameDefinition:
        type: integer
      height:
        type: integer
      id:
        type: integer
      respawn:
        type: boolean
      rotation:
        type: integer
      showInRadar:
        type: boolean
      type:
        type: string
      width:
        type: integer
      x:
        type: integer
      "y":
        type: integer
    type: object
  model.ScoreList:
    properties:
      scores:
        items:
          $ref: '#/definitions/model.MatchScore'
        type: array
    type: object
  model.Student:
    properties:
      id:
        type: integer
      userID:
        type: integer
    type: object
  model.UpdateLuchadorResponse:
    properties:
      errors:
        items:
          type: string
        type: array
      luchador:
        $ref: '#/definitions/model.GameComponent'
        type: object
    type: object
  model.User:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
  model.UserSetting:
    properties:
      id:
        type: integer
      lastOption:
        type: string
      userID:
        type: integer
    type: object
host: http://local.robolucha.com:5000
info:
  contact: {}
  description: Robolucha API
  license: {}
  title: Robolucha API
  version: "1.0"
paths:
  /internal/add-match-scores:
    post:
      consumes:
      - application/json
      parameters:
      - description: ScoreList
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ScoreList'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MatchScore'
            type: object
      security:
      - ApiKeyAuth: []
      summary: saves a match score
  /internal/end-match:
    put:
      consumes:
      - application/json
      parameters:
      - description: Match
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Match'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
            type: object
      security:
      - ApiKeyAuth: []
      summary: ends existing match
  /internal/game-component:
    post:
      consumes:
      - application/json
      parameters:
      - description: Luchador
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.GameComponent'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameComponent'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create Gamecomponent as Luchador
  /internal/game-definition:
    post:
      consumes:
      - application/json
      parameters:
      - description: GameDefinition
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.GameDefinition'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameDefinition'
            type: object
      security:
      - ApiKeyAuth: []
      summary: create Game definition
    put:
      consumes:
      - application/json
      parameters:
      - description: GameDefinition
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.GameDefinition'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameDefinition'
            type: object
      security:
      - ApiKeyAuth: []
      summary: update Game definition
  /internal/game-definition-id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: GameDefinition id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameDefinition'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find a game definition
  /internal/game-definition/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: GameDefinition name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameDefinition'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find a game definition
  /internal/join-classroom/{accessCode}:
    post:
      consumes:
      - application/json
      parameters:
      - description: classroom access code
        in: path
        name: accessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Classroom'
            type: object
      security:
      - ApiKeyAuth: []
      summary: join a classroom
  /internal/luchador:
    post:
      consumes:
      - application/json
      parameters:
      - description: FindLuchadorWithGamedefinition
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.FindLuchadorWithGamedefinition'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameComponent'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find Luchador by ID
  /internal/match-metric:
    post:
      consumes:
      - application/json
      parameters:
      - description: MatchMetric
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.MatchMetric'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: saves a match metric
  /internal/match-participant:
    post:
      consumes:
      - application/json
      parameters:
      - description: MatchParticipant
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.MatchParticipant'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MatchParticipant'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Adds luchador to a match
  /internal/match-single:
    get:
      consumes:
      - application/json
      parameters:
      - description: int valid
        in: query
        name: matchID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find one match
  /internal/play:
    post:
      consumes:
      - application/json
      parameters:
      - description: AvailableMatch
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AvailableMatch'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
            type: object
      security:
      - ApiKeyAuth: []
      summary: request to play a match
  /internal/ready:
    get:
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: returns application health check information
  /private/available-match-classroom/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Classroom id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AvailableMatch'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find available matches by classroom
  /private/available-match-public:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AvailableMatch'
            type: array
      security:
      - ApiKeyAuth: []
      summary: find all public available matches
  /private/classroom:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Classroom'
            type: array
      security:
      - ApiKeyAuth: []
      summary: find all Classroom
    post:
      consumes:
      - application/json
      parameters:
      - description: Classroom
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Classroom'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Classroom'
            type: object
      security:
      - ApiKeyAuth: []
      summary: add a Classroom
  /private/game-definition-all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameDefinition'
            type: array
      security:
      - ApiKeyAuth: []
      summary: find all game definitions
  /private/game-definition-id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: GameDefinition id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameDefinition'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find a game definition
  /private/get-user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find The current user information
  /private/join-match:
    post:
      consumes:
      - application/json
      parameters:
      - description: JoinMatch
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.JoinMatch'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Sends message with the request to join the match
  /private/luchador:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameComponent'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find or create Luchador for the current user
    put:
      consumes:
      - application/json
      parameters:
      - description: Luchador
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.GameComponent'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UpdateLuchadorResponse'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Updates Luchador
  /private/mask-config/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Luchador ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Config'
            type: array
      security:
      - ApiKeyAuth: []
      summary: find maskConfig for a luchador
  /private/mask-random:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Config'
            type: array
      security:
      - ApiKeyAuth: []
      summary: create random maskConfig
  /private/match:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ActiveMatch'
            type: array
      security:
      - ApiKeyAuth: []
      summary: find active matches
  /private/match-config:
    get:
      consumes:
      - application/json
      parameters:
      - description: int valid
        in: query
        name: matchID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameComponent'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return luchador configs for current match
  /private/match-single:
    get:
      consumes:
      - application/json
      parameters:
      - description: int valid
        in: query
        name: matchID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find one match
  /private/tutorial:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameDefinition'
            type: array
      security:
      - ApiKeyAuth: []
      summary: find tutorial GameDefinition
  /private/user/setting:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSetting'
            type: object
      security:
      - ApiKeyAuth: []
      summary: find current user userSetting
    put:
      consumes:
      - application/json
      parameters:
      - description: UserSetting
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserSetting'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSetting'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Updates user userSetting
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
